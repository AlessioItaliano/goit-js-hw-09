{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,SAsB1C,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAa,CAAEF,WAAUC,eACzBE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQL,GAGRM,EAAON,E,GAERD,E,IAjCPL,EAAWc,iBAAiB,UAE5B,SAAkBC,GAChBA,EAAMC,iBAKN,IAJA,IAAIC,EAAcC,OAAOlB,EAAWmB,MAAMC,OACtCC,EAAaH,OAAOlB,EAAWsB,KAAKF,OACpCG,EAAeL,OAAOlB,EAAWwB,OAAOJ,OAEnCK,EAAI,EAAGA,GAAKF,EAAcE,GAAK,EACtCtB,EAAcsB,EAAGR,GACdS,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAWsB,EAAXtB,YACjBP,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAkB0B,OAAZzB,EAAY,M,IAEpE0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAeuB,EAALR,MAClBrB,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAkB0B,OAAZb,EAAY,M,IAEpEA,GAAeI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst submitForm = document.querySelector('.form');\n\nsubmitForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delayOfForm = Number(submitForm.delay.value);\n  let stepOfForm = Number(submitForm.step.value);\n  let amountOfForm = Number(submitForm.amount.value);\n\n  for (let i = 1; i <= amountOfForm; i += 1) {\n    createPromise(i, delayOfForm)\n      .then(({ position, delayOfForm }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delayOfForm}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delayOfForm}ms`);\n      });\n    delayOfForm += stepOfForm;\n  }\n}\n\nfunction createPromise(position, delayOfForm) {\n  const newPromise = { position, delayOfForm };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(newPromise);\n      } else {\n        // Reject\n        reject(newPromise);\n      }\n    }, delayOfForm);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$submitForm","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delayOfForm","newPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayOfForm1","Number","delay","value","stepOfForm","step","amountOfForm","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6f14cc52.js.map"}